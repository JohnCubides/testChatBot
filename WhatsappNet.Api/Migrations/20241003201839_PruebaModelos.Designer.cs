// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WhatsappNet.Api.Class;

#nullable disable

namespace WhatsappNet.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241003201839_PruebaModelos")]
    partial class PruebaModelos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WhatsappNet.Api.Models.ContactsModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("MessagesModelId")
                        .HasColumnType("integer");

                    b.Property<int>("StatusesModelId")
                        .HasColumnType("integer");

                    b.Property<int>("ValueModelId")
                        .HasColumnType("integer");

                    b.Property<int>("profile_name")
                        .HasColumnType("integer");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.Property<int>("wa_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("StatusesModelId")
                        .IsUnique();

                    b.HasIndex("ValueModelId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("WhatsappNet.Api.Models.ErrorModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("code")
                        .HasColumnType("integer");

                    b.Property<string>("error_data_details")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("model_id")
                        .HasColumnType("integer");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Errors");
                });

            modelBuilder.Entity("WhatsappNet.Api.Models.MessageModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("ContactsModelId")
                        .HasColumnType("integer");

                    b.Property<int>("StatusesModelId")
                        .HasColumnType("integer");

                    b.Property<int>("ValueModelId")
                        .HasColumnType("integer");

                    b.Property<int>("audio_id")
                        .HasColumnType("integer");

                    b.Property<string>("audio_mime_type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("button_payload")
                        .HasColumnType("text");

                    b.Property<string>("button_text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("context_forwarded")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("context_frequently_forwarded")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("context_from")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("context_id")
                        .HasColumnType("integer");

                    b.Property<int>("context_referred_product_catalog_id")
                        .HasColumnType("integer");

                    b.Property<int>("context_referred_product_product_retailer_id")
                        .HasColumnType("integer");

                    b.Property<string>("document_caption")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("document_filename")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("document_id")
                        .HasColumnType("integer");

                    b.Property<string>("document_mime_type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("document_sha256")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("from")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("id_meta")
                        .HasColumnType("integer");

                    b.Property<string>("identity_acknowledged")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("identity_created_timestamp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("identity_hash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("image_caption")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("image_id")
                        .HasColumnType("integer");

                    b.Property<string>("image_mime_type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("image_sha256")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("interactive_type_button_reply_id")
                        .HasColumnType("integer");

                    b.Property<string>("interactive_type_button_reply_title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("interactive_type_list_reply_description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("interactive_type_list_reply_id")
                        .HasColumnType("integer");

                    b.Property<string>("interactive_type_list_reply_title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("order_catalog_id")
                        .HasColumnType("integer");

                    b.Property<string>("order_text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("referral_body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("referral_ctwa_clid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("referral_headline")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("referral_image_url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("referral_media_type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("referral_source_id")
                        .HasColumnType("integer");

                    b.Property<string>("referral_source_type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("referral_source_url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("referral_thumbnail_url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("referral_video_url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("sticker_animated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("sticker_id")
                        .HasColumnType("integer");

                    b.Property<string>("sticker_mime_type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("sticker_sha256")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("system_body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("system_customer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("system_identity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("system_new_wa_id")
                        .HasColumnType("integer");

                    b.Property<string>("system_type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("system_wa_id")
                        .HasColumnType("integer");

                    b.Property<string>("text_body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("timestamp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("video_caption")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("video_filename")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("video_id")
                        .HasColumnType("integer");

                    b.Property<string>("video_mime_type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("video_sha256")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("ContactsModelId")
                        .IsUnique();

                    b.HasIndex("StatusesModelId")
                        .IsUnique();

                    b.HasIndex("ValueModelId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("WhatsappNet.Api.Models.StatusesModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("ContactsModelId")
                        .HasColumnType("integer");

                    b.Property<int>("MessagesModelId")
                        .HasColumnType("integer");

                    b.Property<int>("ValueModelId")
                        .HasColumnType("integer");

                    b.Property<string>("biz_opaque_callback_data")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("conversation_id")
                        .HasColumnType("integer");

                    b.Property<string>("conversation_origin_authentication")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("conversation_origin_expiration_timestamp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("conversation_origin_marketing")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("conversation_origin_referral_conversion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("conversation_origin_service")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("conversation_origin_type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("conversation_origin_utility")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("meta_id")
                        .HasColumnType("integer");

                    b.Property<string>("pricing_authentication")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("pricing_authentication_international")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("pricing_category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("pricing_marketing")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("pricing_pricing_model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("pricing_referral_conversion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("pricing_service")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("pricing_utility")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("ValueModelId");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("WhatsappNet.Api.Models.ValueModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("contact_id")
                        .HasColumnType("integer");

                    b.Property<int>("message_id")
                        .HasColumnType("integer");

                    b.Property<string>("messaging_product")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("metadata_display_phone_number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("metadata_phone_number_id")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("statuses_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("Values");
                });

            modelBuilder.Entity("WhatsappNet.Api.Models.ContactsModel", b =>
                {
                    b.HasOne("WhatsappNet.Api.Models.StatusesModel", "Statuses")
                        .WithOne("Contacts")
                        .HasForeignKey("WhatsappNet.Api.Models.ContactsModel", "StatusesModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WhatsappNet.Api.Models.ValueModel", "Values")
                        .WithMany("Contacts")
                        .HasForeignKey("ValueModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Statuses");

                    b.Navigation("Values");
                });

            modelBuilder.Entity("WhatsappNet.Api.Models.MessageModel", b =>
                {
                    b.HasOne("WhatsappNet.Api.Models.ContactsModel", "Contacts")
                        .WithOne("Message")
                        .HasForeignKey("WhatsappNet.Api.Models.MessageModel", "ContactsModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WhatsappNet.Api.Models.StatusesModel", "Statuses")
                        .WithOne("Message")
                        .HasForeignKey("WhatsappNet.Api.Models.MessageModel", "StatusesModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WhatsappNet.Api.Models.ValueModel", "Values")
                        .WithMany("Messages")
                        .HasForeignKey("ValueModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contacts");

                    b.Navigation("Statuses");

                    b.Navigation("Values");
                });

            modelBuilder.Entity("WhatsappNet.Api.Models.StatusesModel", b =>
                {
                    b.HasOne("WhatsappNet.Api.Models.ValueModel", "Values")
                        .WithMany("Statuses")
                        .HasForeignKey("ValueModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Values");
                });

            modelBuilder.Entity("WhatsappNet.Api.Models.ContactsModel", b =>
                {
                    b.Navigation("Message")
                        .IsRequired();
                });

            modelBuilder.Entity("WhatsappNet.Api.Models.StatusesModel", b =>
                {
                    b.Navigation("Contacts")
                        .IsRequired();

                    b.Navigation("Message")
                        .IsRequired();
                });

            modelBuilder.Entity("WhatsappNet.Api.Models.ValueModel", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("Messages");

                    b.Navigation("Statuses");
                });
#pragma warning restore 612, 618
        }
    }
}
